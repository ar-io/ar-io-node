---
openapi: 3.0.0
info:
  title: AR.IO Gateway
  version: 0.0.1
  x-logo:
    url: 'https://ar.io/wp-content/uploads/2022/02/ar-io-FINAL-LOGO-SHADOW.png'
  description: |
    AR.IO Gateways are the interface between users and the Permaweb. Each Gateway acts like a “Permaweb Service
    Provider” and supports multiple, value-added, low-trust services for users and applications.

    The AR.IO HTTP API is served by all AR.IO Gateways, and is used by all Arweave clients looking to read, write and query data.  It supports the following capabilities
    - seeding layer one transactions to the greater Arweave network
    - caching and serving chain and transaction data
    - resolving friendly names to transaction data with the Arweave Name System
    - indexing and querying layer one and two transactions
    - proxy for Arweave nodes serving the Arweave HTTP API

    # Errors

    The API uses standard HTTP status codes to indicate the success or failure of the API call.

    # Authentication

    All inbound transactions to the Arweave network must contain a valid signature from an Arweave wallet with appropriate amount of AR tokens.  At this time, clients are not required to sign their requests for outbound data from the Arweave network.
tags:
  - name: Network
    description: |
      Get Arweave node info, peers and nework status
  - name: Pricing
    description: |
      Get the price (in winston) for an amount of bytes
  - name: Wallets
    description: |
      Get Arweave wallet balance and last transaction information
  - name: Blocks
    description: |
      Get current or historical Arweave block information
  - name: Transactions
    description: |
      Submit a new Arweave transaction or get existing transaction information
  - name: Cache
    description: |
      Get data from the AR.IO Gateway cache
  - name: Chunks
    description: |
      Upload Arweave data chunks or get existing chunk offset information
  - name: Index Querying
    description: |
      Get data from the AR.IO Gateway index using GQL
  - name: Admin
    description: |
      Access several password protected features and functions specific to your AR.IO Gateway.
  - name: Farcaster Frames
    description: |
      Retrieve and interact with Farcaster Frames using Arweave transactions.
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: apiToken
      description: ADMIN_API_KEY set in your .env file.
  schemas:
    Block:
      type: object
      properties:
        usd_to_ar_rate:
          type: array
          minItems: 2
          maxItems: 2
          items:
            type: string
            pattern: '^[0-9]+$'
        scheduled_usd_to_ar_rate:
          type: array
          minItems: 2
          maxItems: 2
          items:
            type: string
            pattern: '^[0-9]+$'
        packing_2_5_threshold:
          type: string
          pattern: '^[0-9]+$'
        strict_data_split_threshold:
          type: string
          pattern: '^[0-9]+$'
        nonce:
          type: string
          # TODO restrict length (not sure about max, it depends on height)
          pattern: '^[0-9a-zA-Z_-]+$'
        previous_block:
          type: string
          pattern: '^[0-9a-zA-Z_-]{64}$'
        timestamp:
          type: integer
        last_retarget:
          type: integer
        diff:
          anyOf:
            - type: integer
            - type: string
              pattern: '^[0-9]+$'
        height:
          type: integer
        hash:
          type: string
          pattern: '^[0-9a-zA-Z_-]{43}$|^[0-9a-zA-Z_-]{64}$'
        txs:
          type: array
          minItems: 0
          maxItems: 1000
          items:
            type: string
            pattern: '^[0-9a-zA-Z_-]{43}$'
        tx_root:
          type: string
          pattern: '^$|^[0-9a-zA-Z_-]{43}$'
        tx_tree:
          type: array
          maxItems: 0
          items:
            type: string
        wallet_list:
          type: string
          pattern: '^[0-9a-zA-Z_-]{43}$|^[0-9a-zA-Z_-]{64}$'
        reward_addr:
          type: string
          pattern: '^[0-9a-zA-Z_-]{43}$'
        tags:
          type: array
          maxItems: 2048
          items:
            type: object
            properties:
              name:
                type: string
                pattern: '^[0-9a-zA-Z_-]{1,2731}$'
              value:
                type: string
                pattern: '^[0-9a-zA-Z_-]{1,2731}$'
        reward_pool:
          anyOf:
            - type: integer
            - type: string
              # TODO add length restriction
              pattern: '^[0-9]+$'
        weave_size:
          anyOf:
            - type: integer
            - type: string
              pattern: '^[0-9]+$'
        block_size:
          anyOf:
            - type: integer
            - type: string
              pattern: '^[0-9]+$'
        cumulative_diff:
          type: string
          pattern: '^[0-9]+$'
        hash_list_merkle:
          type: string
          pattern: '^[0-9a-zA-Z_-]{64}$'
        poa:
          type: object
          properties:
            option:
              type: string
              pattern: '^[0-9]+$'
            tx_path:
              type: string
              # TODO specify length
              pattern: '^[0-9a-zA-Z_-]*$'
            data_path:
              type: string
              # TODO specify length
              pattern: '^[0-9a-zA-Z_-]*$'
            chunk:
              type: string
              # TODO specify length
              pattern: '^[0-9a-zA-Z_-]*$'
      required:
        - nonce
        - previous_block
        - timestamp
        - last_retarget
        - diff
        - height
        - hash
        - indep_hash
        - txs
        - tx_root
        - wallet_list
        - reward_addr
        - tags
        - reward_pool
        - weave_size
        - block_size
        - poa
    Chunk:
      type: object
      properties:
        tx_path:
          type: string
          pattern: '^[0-9a-zA-Z_-]+$'
        packing:
          type: string
          # TODO add all types
          pattern: '^unpacked$'
        data_path:
          type: string
          pattern: '^[0-9a-zA-Z_-]+$'
        chunk:
          type: string
          pattern: '^[0-9a-zA-Z_-]+$'
      required:
        - tx_path
        - packing
        - data_path
        - chunk
    Transaction:
      type: object
      properties:
        format:
          type: integer
        id:
          type: string
          pattern: '^[0-9a-zA-Z_-]{43}$'
        last_tx:
          type: string
          pattern: '^[0-9a-zA-Z_-]{43}|[0-9a-zA-Z_-]{64}$'
        owner:
          type: string
          pattern: '^[0-9a-zA-Z_-]{1,683}$'
        tags:
          type: array
          maxItems: 2048
          items:
            type: object
            properties:
              name:
                type: string
                pattern: '^[0-9a-zA-Z_-]{1,2731}$'
              value:
                type: string
                pattern: '^[0-9a-zA-Z_-]{1,2731}$'
        target:
          type: string
          pattern: '^$|^[0-9a-zA-Z_-]{43}$'
        quantity:
          type: string
          pattern: '^[0-9]{1,21}$'
        data:
          # TODO determine limit (if any)
          type: string
          pattern: '^[0-9a-zA-Z_-]*$'
        data_tree:
          type: array
          items:
            # TODO determine contents of array (is this just for v1?)
            type: string
        data_root:
          type: string
          pattern: '^[0-9a-zA-Z_-]*$'
        reward:
          type: string
          pattern: '^[0-9]{1,21}$'
        signature:
          type: string
          pattern: '^[0-9a-zA-Z_-]{1,683}$'
      required:
        - format
        - id
        - last_tx
        - owner
        - tags
        - target
        - quantity
        - data
        - data_tree
        - data_root
        - reward
        - signature
    TransactionOffset:
      type: object
      properties:
        size:
          type: string
          pattern: '^[0-9]+$'
        offset:
          type: string
          pattern: '^[0-9]+$'
      required:
        - size
        - offset
    TransactionStatus:
      type: object
      properties:
        block_height:
          type: integer
        block_indep_hash:
          type: string
          pattern: '^[0-9a-zA-Z_-]{64}$'
        number_of_confirmations:
          type: integer
      required:
        - block_height
        - block_indep_hash
        - number_of_confirmations
    Mempool:
      type: array
      items:
        type: string
        pattern: '^[0-9a-zA-Z_-]{43}$'
    NetworkInfo:
      type: object
      properties:
        network:
          type: string
        version:
          type: integer
        release:
          type: integer
        current:
          type: string
          pattern: '^[0-9a-zA-Z_-]{64}$'
        blocks:
          type: integer
        peers:
          type: integer
        queue_length:
          type: integer
        node_state_latency:
          type: integer
      required:
        - network
        - version
        - release
        - current
        - blocks
        - peers
        - queue_length
        - node_state_latency
    PeerList:
      type: array
      items:
        type: string
        pattern: '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}:\d+$'
    Height:
      type: string
      pattern: '^[0-9]{16}$'
paths:
  # Network and Node Status
  '/':
    get:
      tags: [Network]
      summary: Network and Gateway Status.
      description: Get information about the current status of the Network and your Gateway.
      responses:
        '200':
          description: |-
            Successful operation.
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/NetworkInfo'
  '/info':
    get:
      tags: [Network]
      summary: Network and Gateway Status, alternate endpoint.
      description: An alternative option for accessing network and Gateway status.
      responses:
        '200':
          description: |-
            Successful operation.
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/NetworkInfo'
  '/peers':
    get:
      tags: [Network]
      summary: Get active peer list.
      description: Gets a list of ip addresses for peers your Gateway is currently connected with.
      responses:
        '200':
          description: |-
            Successful operation.
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/PeerList'
  '/height':
    get:
      tags: [Network]
      summary: Get current block height.
      description: Gets the current block height of the Arweave network.
      responses:
        '200':
          description: |-
            200 response
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Height'
  # "/metrics"
  # "/tx_anchor"
  # "/hash_list"
  # "/data_sync_record"
  # "/data_sync_record/{start}/{limit}""
  # "/time"
  # "/sync_buckets"

  # Pricing
  '/price/{size}':
    get:
      tags: [Pricing]
      summary: Get price to store an amount of data.
      description: Get the price, in Winston, required to store a specified amount of data, in bytes, on the Arweave network.
      parameters:
        - name: size
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      responses:
        '200':
          description: |-
            Successful operation.
          content:
            # TODO text/plain ?
            text/html:
              schema:
                type: integer
  '/price/{size}/target':
    get:
      tags: [Pricing]
      summary: Get price to transfer AR into a wallet and store an amount of data
      description: |
        Get the price, in Winston, required to transfer AR into a wallet and store a specified amount of data, in bytes, on the Arweave network.
      parameters:
        - name: size
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      responses:
        '200':
          description: |-
            Successful operation.
          content:
            text/html:
              schema:
                type: integer

  # Wallets
  '/wallet/{address}/balance':
    get:
      tags: [Wallets]
      summary: Get the current balance of a wallet.
      description: Get the current balance of AR, in Winston, of a specified wallet address.
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9a-zA-Z_-]{43}$'
      responses:
        '200':
          description: |-
            Successful operation.
          content:
            # TODO text/plain ?
            text/html:
              schema:
                type: integer
  '/wallet/{address}/last_tx':
    get:
      tags: [Wallets]
      summary: Get the last transaction of a wallet.
      description: Get the TX ID from the most recent transaction a specified wallet completed.
      parameters:
        - name: address
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9a-zA-Z_-]{43}$'
      responses:
        '200':
          description: |-
            Successful operation.
          content:
            # TODO text/plain ?
            text/html:
              schema:
                type: string
                pattern: '^$|^[0-9a-zA-Z_-]{43}$'

  # Blocks
  '/current_block':
    get:
      tags: [Blocks]
      summary: Get information about the current block.
      description: Get detailed information about the current block on the Arweave network.
      responses:
        '200':
          description: |-
            Successful operation.
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Block'
  '/block/height/{height}':
    get:
      tags: [Blocks]
      summary: Get current block height.
      description: Gets the current block height of the Arweave network.
      parameters:
        - name: height
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9]+$'
      responses:
        '200':
          description: |-
            Successful operation.
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Block'
  '/block/hash/{hash}':
    get:
      tags: [Blocks]
      summary: Get block by hash.
      description: Get block information based on a block's hash.
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9a-zA-Z_-]{64}$'
      responses:
        '200':
          description: |-
            Successful operation.
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Block'
  '/block/current':
    get:
      tags: [Blocks]
      summary: Alternative endpoint to get current block.
      description: Alternative endpoint to `/current_block`, gets current block information.
      responses:
        '200':
          description: |-
            Successful operation.
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Block'
  # "/block/hash/{block hash}/wallet_list"

  # Transactions
  '/tx/pending':
    get:
      tags: [Transactions]
      summary: Get pending transactions.
      description: Get list of transactions that are currently pending.
      responses:
        '200':
          description: |-
            Successful operation.
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Mempool'
  '/tx/{txId}':
    get:
      tags: [Transactions]
      summary: Get information about a transaction.
      description: Get detailed information about a specific transaction.
      parameters:
        - name: txId
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9a-zA-Z_-]{43}$'
      responses:
        '200':
          description: |-
            Successful operation.
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Transaction'
  '/tx/{txId}/offset':
    get:
      tags: [Transactions]
      summary: Get transaction offset information.
      description: Get information about the size and offset of a specified transaction.
      parameters:
        - name: txId
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9a-zA-Z_-]{43}$'
      responses:
        '200':
          description: |-
            Successful operation.
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/TransactionOffset'
  '/tx/{txId}/status':
    get:
      tags: [Transactions]
      summary: Get transaction status.
      description: Get the status of a specified transaction.
      parameters:
        - name: txId
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9a-zA-Z_-]{43}$'
      responses:
        '200':
          description: |-
            Successful operation.
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/TransactionStatus'
  # "/tx/{txId}/field"
  # "/unconfirmed_tx/{txId}"

  # Cache
  '/{txId}':
    get:
      tags: [Cache]
      summary: Get transaction.
      description: Get the content of a specified transaction.
      parameters:
        - name: txId
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9a-zA-Z_-]{43}$'
      responses:
        '200':
          description: |-
            Successful operation.
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Transaction'

  # Chunks
  '/chunk/{offset}':
    get:
      tags: [Chunks]
      summary: Get chunk offset information.
      description: Fetches information about the size and offset of a specified chunk.
      parameters:
        - name: offset
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: |-
            200 response
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Chunk'

  # Index
  # "/graphql"

  # Admin
  '/ar-io/admin/debug':
    get:
      tags: [Admin]
      summary: Admin debugging information.
      description: Get detailed information about the current operational state of your AR.IO Gateway, including information about any current warnings or errors.
      operationId: adminDebug
      responses:
        '200':
          description: Successful operation.
        '401':
          description: Unauthorized, API key likely incorrect.
      security:
        - bearerAuth: []
  '/ar-io/admin/queue-tx':
    post:
      tags: [Admin]
      summary: Prioritize a transaction or bundle in the queue.
      description: Stage a specific TX ID as priority for your Gateway to locate and index. This will trigger and queue bundle processing if the transaction is a bundle, and your Gateway is configured to unbundle and index.
      operationId: adminQueueTx
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  pattern: '^[0-9a-zA-Z_-]{43}$'
                  description: TX ID of the transaction you would like to prioritize.
            examples:
              example1:
                value:
                  id: '3lyxgbgEvqNSvJrTX2J7CfRychUD5KClFhhVLyTPNCQ'
      responses:
        '200':
          description: Successful operation
        '401':
          description: Unauthorized, API key likely incorrect.
      security:
        - bearerAuth: []
  '/ar-io/admin/block-data':
    put:
      tags: [Admin]
      summary: Blocks transactions or data-items so your AR.IO Gateway will not serve them.
      description: |
        Submits a TX ID/data-item ID or sha-256 content hash for content you do not want your AR.IO Gateway to serve. Once submitted, your Gateway will not respond to requests for these transactions or data-items.


        WARNING - Testing a TX ID here WILL result in that data being blocked by your Gateway.
      operationId: adminBlockData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: TX ID for a transaction you want to block.
                notes:
                  type: string
                  description: Any notes or comments related to the block data. Documentation purposes only.
                source:
                  type: string
                  description: The source from which the block data was obtained. Documentation purposes only.
            examples:
              example1:
                value:
                  id: '3lyxgbgEvqNSvJrTX2J7CfRychUD5KClFhhVLyTPNCQ'
                  notes: 'This content is offensive'
                  source: 'Public Block list'
      responses:
        '200':
          description: Successful operation.
        '401':
          description: Unauthorized, API key likely incorrect.
      security:
        - bearerAuth: []
  '/local/farcaster/frame/{txId}':
    get:
      tags: [Farcaster Frames]
      summary: Handle a Farcaster initial Frame request.
      description: Responds to a Farcaster initial Frame GET request by
        returning the content of a specified Arweave transaction or data item.
      parameters:
        - name: txId
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9a-zA-Z_-]{43}$'
      responses:
        '200':
          description: |-
            Successful operation.
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Transaction'
    post:
      tags: [Farcaster Frames]
      summary: Handle a Farcaster response Frame request.
      description: Responds to a Farcaster response Frame POST request by
        returning the content of a specified Arweave transaction or data item.
      parameters:
        - name: txId
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9a-zA-Z_-]{43}$'
      responses:
        '200':
          description: |-
            Successful operation.
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/Transaction'
