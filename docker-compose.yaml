---
services:
  envoy:
    image: ghcr.io/ar-io/ar-io-envoy:${ENVOY_IMAGE_TAG:-latest}
    build:
      context: envoy/
    restart: on-failure:5
    ports:
      - '3000:3000'
      - '9901:9901'
    environment:
      - LOG_LEVEL=${ENVOY_LOG_LEVEL:-info}
      - TVAL_AR_IO_HOST=core
      - TVAL_AR_IO_PORT=4000
      - TVAL_OBSERVER_HOST=observer
      - TVAL_OBSERVER_PORT=5050
      - TVAL_GATEWAY_HOST=${TRUSTED_GATEWAY_HOST:-arweave.net}
      - TVAL_GRAPHQL_HOST=${GRAPHQL_HOST:-core}
      - TVAL_GRAPHQL_PORT=${GRAPHQL_PORT:-4000}
      - TVAL_ARNS_ROOT_HOST=${ARNS_ROOT_HOST:-}
    depends_on:
      - core
      - observer
  core:
    image: ghcr.io/ar-io/ar-io-core:${CORE_IMAGE_TAG:-latest}
    build:
      context: .
    restart: on-failure:5
    ports:
      - 4000:4000
    volumes:
      - ${CHUNKS_DATA_PATH:-./data/chunks}:/app/data/chunks
      - ${CONTIGUOUS_DATA_PATH:-./data/contiguous}:/app/data/contiguous
      - ${HEADERS_DATA_PATH:-./data/headers}:/app/data/headers
      - ${SQLITE_DATA_PATH:-./data/sqlite}:/app/data/sqlite
      - ${TEMP_DATA_PATH:-./data/tmp}:/app/data/tmp
      - ${LMDB_DATA_PATH:-./data/lmdb}:/app/data/lmdb
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - LOG_LEVEL=${CORE_LOG_LEVEL:-info}
      - LOG_FORMAT=${LOG_FORMAT:-simple}
      - TRUSTED_NODE_URL=${TRUSTED_NODE_URL:-}
      - TRUSTED_GATEWAY_URL=https://${TRUSTED_GATEWAY_HOST:-arweave.net}
      - START_HEIGHT=${START_HEIGHT:-}
      - STOP_HEIGHT=${STOP_HEIGHT:-}
      - SKIP_CACHE=${SKIP_CACHE:-}
      - SIMULATED_REQUEST_FAILURE_RATE=${SIMULATED_REQUEST_FAILURE_RATE:-}
      - INSTANCE_ID=${INSTANCE_ID:-}
      - AR_IO_WALLET=${AR_IO_WALLET:-}
      - ADMIN_API_KEY=${ADMIN_API_KEY:-}
      - BACKFILL_BUNDLE_RECORDS=${BACKFILL_BUNDLE_RECORDS:-}
      - FILTER_CHANGE_REPROCESS=${FILTER_CHANGE_REPROCESS:-}
      - ANS104_UNBUNDLE_WORKERS=${ANS104_UNBUNDLE_WORKERS:-}
      - ANS104_DOWNLOAD_WORKERS=${ANS104_DOWNLOAD_WORKERS:-}
      - ANS104_UNBUNDLE_FILTER=${ANS104_UNBUNDLE_FILTER:-}
      - ANS104_INDEX_FILTER=${ANS104_INDEX_FILTER:-}
      - ARNS_ROOT_HOST=${ARNS_ROOT_HOST:-}
      - SANDBOX_PROTOCOL=${SANDBOX_PROTOCOL:-}
      - START_WRITERS=${START_WRITERS:-}
      - CONTRACT_ID=${CONTRACT_ID:-}
      - CHAIN_CACHE_TYPE=${CHAIN_CACHE_TYPE:-redis}
      - REDIS_CACHE_URL=${REDIS_CACHE_URL:-redis://redis:6379}
      - REDIS_CACHE_TTL_SECONDS=${REDIS_CACHE_TTL_SECONDS:-}
      - NODE_JS_MAX_OLD_SPACE_SIZE=${NODE_JS_MAX_OLD_SPACE_SIZE:-}
      - ENABLE_FS_HEADER_CACHE_CLEANUP=${ENABLE_FS_HEADER_CACHE_CLEANUP:-true}
      - ON_DEMAND_RETRIEVAL_ORDER=${ON_DEMAND_RETRIEVAL_ORDER:-}
      - WEBHOOK_TARGET_SERVERS=${WEBHOOK_TARGET_SERVERS:-}
      - WEBHOOK_INDEX_FILTER=${WEBHOOK_INDEX_FILTER:-}
      - WEBHOOK_BLOCK_FILTER=${WEBHOOK_INDEX_FILTER:-}
      - CONTIGUOUS_DATA_CACHE_CLEANUP_THRESHOLD=${CONTIGUOUS_DATA_CACHE_CLEANUP_THRESHOLD:-}
      - TRUSTED_ARNS_RESOLVER_TYPE=${TRUSTED_ARNS_RESOLVER_TYPE:-gateway}
      - TRUSTED_ARNS_RESOLVER_URL=${TRUSTED_ARNS_RESOLVER_URL:-https://__NAME__.arweave.dev}
      - ENABLE_MEMPOOL_WATCHER=${ENABLE_MEMPOOL_WATCHER:-false}
      - MEMPOOL_POOLING_INTERVAL_MS=${MEMPOOL_POOLING_INTERVAL_MS:-}
    depends_on:
      - redis

  redis:
    image: redis:${REDIS_IMAGE_TAG:-7}
    command: redis-server --maxmemory ${REDIS_MAX_MEMORY:-256mb} --maxmemory-policy allkeys-lru ${EXTRA_REDIS_FLAGS:---save "" --appendonly no}
    restart: on-failure:5
    ports:
      - 6379:6379
    volumes:
      - ${REDIS_DATA_PATH:-./data/redis}:/data

  observer:
    image: ghcr.io/ar-io/ar-io-observer:${OBSERVER_IMAGE_TAG:-624b6090acd1060c89f7bb1995a86df310388b72}
    restart: on-failure:5
    ports:
      - 5050:5050
    volumes:
      - ${TEMP_DATA_PATH:-./data/tmp}:/app/data/tmp
      - ${REPORTS_DATA_PATH:-./data/reports}:/app/data/reports
      - ${WARP_CACHE_PATH:-./data/warp/cache}:/app/cache/warp
      - ${WALLETS_PATH:-./wallets}:/app/wallets
    environment:
      - PORT=5050
      - LOG_LEVEL=${OBSERVER_LOG_LEVEL:-info}
      - OBSERVER_WALLET=${OBSERVER_WALLET:-<example>}
      - CONTRACT_ID=${CONTRACT_ID:-}
      - SUBMIT_CONTRACT_INTERACTIONS=${SUBMIT_CONTRACT_INTERACTIONS:-true}
      - NUM_ARNS_NAMES_TO_OBSERVE_PER_GROUP=${NUM_ARNS_NAMES_TO_OBSERVE_PER_GROUP:-5}
      - REPORT_GENERATION_INTERVAL_MS=${REPORT_GENERATION_INTERVAL_MS:-}
      - RUN_OBSERVER=${RUN_OBSERVER:-true}
      - MIN_RELEASE_NUMBER=${MIN_RELEASE_NUMBER:-0}
      - AR_IO_NODE_RELEASE=${AR_IO_NODE_RELEASE:-12-pre}
      - CONTRACT_CACHE_URL=${CONTRACT_CACHE_URL:-}

  resolver:
    image: ghcr.io/ar-io/arns-resolver:${RESOLVER_IMAGE_TAG:-fe035b80cc9e6038b4d4bec671ec9b33ac184e18}
    restart: on-failure:5
    ports:
      - 6000:6000
    environment:
      - PORT=6000
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - CONTRACT_ID=${CONTRACT_ID:-}
      - RUN_RESOLVER=${RUN_RESOLVER:-false}
      - EVALUATION_INTERVAL_MS=${EVALUATION_INTERVAL_MS:-}
      - CONTRACT_CACHE_URL=${CONTRACT_CACHE_URL:-}
      - ARNS_CACHE_PATH=${ARNS_CACHE_PATH:-./data/arns}
    volumes:
      - ${ARNS_CACHE_PATH:-./data/arns}:/app/data/arns

  litestream:
    image: ghcr.io/ar-io/ar-io-litestream:${LITESTREAM_IMAGE_TAG:-latest}
    build:
      context: litestream/
      dockerfile: Dockerfile
    profiles:
      - litestream
    volumes:
      - ${SQLITE_DATA_PATH:-./data/sqlite}:/app/data/sqlite
    environment:
      - TVAL_AR_IO_SQLITE_BACKUP_S3_BUCKET_NAME=${AR_IO_SQLITE_BACKUP_S3_BUCKET_NAME:-}
      - TVAL_AR_IO_SQLITE_BACKUP_S3_BUCKET_REGION=${AR_IO_SQLITE_BACKUP_S3_BUCKET_REGION:-}
      - TVAL_AR_IO_SQLITE_BACKUP_S3_BUCKET_ACCESS_KEY=${AR_IO_SQLITE_BACKUP_S3_BUCKET_ACCESS_KEY:-}
      - TVAL_AR_IO_SQLITE_BACKUP_S3_BUCKET_SECRET_KEY=${AR_IO_SQLITE_BACKUP_S3_BUCKET_SECRET_KEY:-}

  upload-service:
    image: ghcr.io/ardriveapp/turbo-upload-service:${UPLOAD_SERVICE_IMAGE_TAG:-latest}
    environment:
      ARWEAVE_GATEWAY: ${ARWEAVE_GATEWAY:-http://envoy:3000}
      PORT: ${UPLOAD_SERVICE_PORT:-5100}
      NODE_ENV: ${NODE_ENV:-local}
      DB_HOST: ${UPLOAD_SERVICE_DB_HOST:-upload-service-pg}
      DB_PORT: ${UPLOAD_SERVICE_DB_PORT:-5432}
      DB_PASSWORD: ${UPLOAD_SERVICE_DB_PASSWORD:-postgres}
      PAYMENT_SERVICE_BASE_URL: ${PAYMENT_SERVICE_BASE_URL:-payment.ardrive.dev}
      MAX_DATA_ITEM_SIZE: ${MAX_DATA_ITEM_SIZE:-10737418240}
      ALLOW_LISTED_ADDRESSES: ${ALLOW_LISTED_ADDRESSES:-}
      AWS_REGION: ${AWS_REGION:-us-east-1}
      AWS_ENDPOINT: ${AWS_ENDPOINT:-http://localstack:4566}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-test}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-test}
      SQS_PREPARE_BUNDLE_URL: ${SQS_PREPARE_BUNDLE_URL:-http://sqs.us-east-1.localstack.localstack.cloud:4566/000000000000/prepare-bundle-queue}
      SQS_FINALIZE_UPLOAD_URL: ${SQS_FINALIZE_UPLOAD_URL:-http://sqs.us-east-1.localstack.localstack.cloud:4566/000000000000/finalize-multipart-queue}
      SQS_OPTICAL_URL: ${SQS_OPTICAL_URL:-http://sqs.us-east-1.localstack.localstack.cloud:4566/000000000000/optical-post-queue}
      SQS_NEW_DATA_ITEM_URL: ${SQS_NEW_DATA_ITEM_URL:-http://sqs.us-east-1.localstack.localstack.cloud:4566/000000000000/batch-insert-new-data-items-queue}
      SQS_UNBUNDLE_BDI_URL: ${SQS_UNBUNDLE_BDI_URL:-http://sqs.us-east-1.localstack.localstack.cloud:4566/000000000000/bdi-unbundle-queue}
      OPTICAL_BRIDGING_ENABLED: ${OPTICAL_BRIDGING_ENABLED:-false}
      SKIP_BALANCE_CHECKS: ${SKIP_BALANCE_CHECKS:-true}
      DATA_ITEM_BUCKET: ${DATA_ITEM_BUCKET:-raw-data-items}
      DATA_ITEM_BUCKET_REGION: ${DATA_ITEM_BUCKET_REGION:-us-east-1}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      S3_FORCE_PATH_STYLE: ${S3_FORCE_PATH_STYLE:-true}
      MIGRATE_ON_STARTUP: ${MIGRATE_ON_STARTUP:-true}
    ports:
      - ${UPLOAD_SERVICE_PORT:-5100}:${UPLOAD_SERVICE_PORT:-5100}
    volumes:
      - ${UPLOAD_SERVICE_DATA_PATH:-./data/upload-service}:/temp
    depends_on:
      - upload-service-pg
      - fulfillment-service
    profiles: ['bundler']

  fulfillment-service:
    image: ghcr.io/ardriveapp/turbo-upload-service-fulfillment:${UPLOAD_SERVICE_IMAGE_TAG:-latest}
    environment:
      ARWEAVE_GATEWAY: ${ARWEAVE_GATEWAY:-http://envoy:3000}
      NODE_ENV: ${NODE_ENV:-local}
      DB_HOST: ${UPLOAD_SERVICE_DB_HOST:-upload-service-pg}
      DB_PORT: ${UPLOAD_SERVICE_DB_PORT:-5432}
      APP_NAME: ${APP_NAME:-}
      DB_PASSWORD: ${UPLOAD_SERVICE_DB_PASSWORD:-postgres}
      PORT: ${FULFILLMENT_PORT:-4401}
      AWS_ENDPOINT: ${AWS_ENDPOINT:-http://localstack:4566}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-test}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-test}
      SQS_PREPARE_BUNDLE_URL: ${SQS_PREPARE_BUNDLE_URL:-http://sqs.us-east-1.localstack.localstack.cloud:4566/000000000000/prepare-bundle-queue}
      SQS_POST_BUNDLE_URL: ${SQS_POST_BUNDLE_URL:-http://sqs.us-east-1.localstack.localstack.cloud:4566/000000000000/post-bundle-queue}
      SQS_SEED_BUNDLE_URL: ${SQS_SEED_BUNDLE_URL:-http://sqs.us-east-1.localstack.localstack.cloud:4566/000000000000/seed-bundle-queue}
      SQS_FINALIZE_UPLOAD_URL: ${SQS_FINALIZE_UPLOAD_URL:-http://sqs.us-east-1.localstack.localstack.cloud:4566/000000000000/finalize-multipart-queue}
      SQS_OPTICAL_URL: ${SQS_OPTICAL_URL:-http://sqs.us-east-1.localstack.localstack.cloud:4566/000000000000/optical-post-queue}
      SQS_NEW_DATA_ITEM_URL: ${SQS_NEW_DATA_ITEM_URL:-http://sqs.us-east-1.localstack.localstack.cloud:4566/000000000000/batch-insert-new-data-items-queue}
      SQS_UNBUNDLE_BDI_URL: ${SQS_UNBUNDLE_BDI_URL:-http://sqs.us-east-1.localstack.localstack.cloud:4566/000000000000/bdi-unbundle-queue}
      PLAN_BUNDLE_ENABLED: ${PLAN_BUNDLE_ENABLED:-true}
      VERIFY_BUNDLE_ENABLED: ${VERIFY_BUNDLE_ENABLED:-true}
      OPTICAL_BRIDGING_ENABLED: ${OPTICAL_BRIDGING_ENABLED:-false}
      SKIP_BALANCE_CHECKS: ${SKIP_BALANCE_CHECKS:-true}
      DATA_ITEM_BUCKET: ${DATA_ITEM_BUCKET:-raw-data-items}
      DATA_ITEM_BUCKET_REGION: ${DATA_ITEM_BUCKET_REGION:-us-east-1}
      S3_FORCE_PATH_STYLE: ${S3_FORCE_PATH_STYLE:-true}
      AWS_REGION: ${AWS_REGION:-us-east-1}
      OVERDUE_DATA_ITEM_THRESHOLD_MS: ${OVERDUE_DATA_ITEM_THRESHOLD_MS:-0} # plan all into bundles data items immediately
      AR_IO_ADMIN_KEY: ${AR_IO_ADMIN_KEY:-$ADMIN_API_KEY}
    depends_on:
      localstack:
        condition: service_healthy
      upload-service-pg:
        condition: service_started
    profiles: ['bundler']

  upload-service-pg:
    image: postgres:13.8
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - '5432:5432'
    volumes:
      - ${UPLOAD_SERVICE_PG_DATA_PATH:-./data/upload-service-pg}:/var/lib/postgresql/data
    profiles: ['bundler']

  localstack:
    image: ghcr.io/ardriveapp/turbo-upload-service-localstack:${UPLOAD_SERVICE_IMAGE_TAG:-latest}
    ports:
      - '127.0.0.1:4566:4566'
      #- "127.0.0.1:4510-4559:4510-4559" # external services port range
    environment:
      # LocalStack configuration: https://docs.localstack.cloud/references/configuration/
      - SERVICES=${SERVICES:-s3,sqs,secretsmanager}
      - DEBUG=${DEBUG:-0}
      - NODE_ENV=${NODE_ENV:-local}
      - ARWEAVE_WALLET=${ARWEAVE_WALLET:-$BUNDLER_ARWEAVE_WALLET}
      - TURBO_OPTICAL_KEY=${TURBO_OPTICAL_KEY:-$BUNDLER_ARWEAVE_WALLET}
      - PERSIST_DEFAULT=${PERSIST_LOCALSTACK:-1} # set to 0 to disable persistence of resources and s3 objects between restarts
    volumes:
      - '${LOCALSTACK_VOLUME_DIR:-./data/localstack}:/var/lib/localstack'
      - '${LOCALSTACK_VOLUME_DIR:-./data/localstack}:/persisted-data'
      - '/var/run/docker.sock:/var/run/docker.sock'
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'curl -f http://localhost:4566/_localstack/health || exit 1',
        ]
      interval: 90s
      timeout: 30s
      retries: 1
      start_period: 15s
    profiles: ['bundler']
