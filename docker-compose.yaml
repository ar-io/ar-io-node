---
services:
  envoy:
    image: ghcr.io/ar-io/ar-io-envoy:${ENVOY_IMAGE_TAG:-latest}
    build:
      context: envoy/
    restart: unless-stopped
    ports:
      - '${ENVOY_PORT:-3000}:3000'
      #- '9901:9901' # don't expose admin port by default
    environment:
      - LOG_LEVEL=${ENVOY_LOG_LEVEL:-info}
      - TVAL_AR_IO_HOST=core
      - TVAL_AR_IO_PORT=${CORE_PORT:-4000}
      - TVAL_OBSERVER_HOST=observer
      - TVAL_OBSERVER_PORT=${OBSERVER_PORT:-5050}
      - TVAL_TRUSTED_NODE_HOST=${TRUSTED_NODE_HOST:-arweave.net}
      - TVAL_TRUSTED_NODE_PORT=${TRUSTED_NODE_PORT:-443}
      - TVAL_FALLBACK_NODE_HOST=${FALLBACK_NODE_HOST:-peers.arweave.xyz}
      - TVAL_FALLBACK_NODE_PORT=${FALLBACK_NODE_PORT:-1984}
      - TVAL_GRAPHQL_HOST=${GRAPHQL_HOST:-core}
      - TVAL_GRAPHQL_PORT=${GRAPHQL_PORT:-4000}
      - TVAL_ARNS_ROOT_HOST=${ARNS_ROOT_HOST:-}
    networks:
      - ar-io-network
    depends_on:
      - core
      - observer

  core:
    image: ghcr.io/ar-io/ar-io-core:${CORE_IMAGE_TAG:-latest}
    build:
      context: .
    restart: unless-stopped
    ports:
      - ${CORE_PORT:-4000}:4000
    volumes:
      - ${CHUNKS_DATA_PATH:-./data/chunks}:/app/data/chunks
      - ${CONTIGUOUS_DATA_PATH:-./data/contiguous}:/app/data/contiguous
      - ${HEADERS_DATA_PATH:-./data/headers}:/app/data/headers
      - ${SQLITE_DATA_PATH:-./data/sqlite}:/app/data/sqlite
      - ${DUCKDB_DATA_PATH:-./data/duckdb}:/app/data/duckdb
      - ${TEMP_DATA_PATH:-./data/tmp}:/app/data/tmp
      - ${LMDB_DATA_PATH:-./data/lmdb}:/app/data/lmdb
      - ${PARQUET_DATA_PATH:-./data/parquet}:/app/data/parquet
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - LOG_LEVEL=${CORE_LOG_LEVEL:-info}
      - LOG_FORMAT=${CORE_LOG_FORMAT:-simple}
      - LOG_FILTER=${CORE_LOG_FILTER:-}
      - TRUSTED_NODE_URL=${TRUSTED_NODE_URL:-http://envoy:3000}
      - TRUSTED_GATEWAY_URL=${TRUSTED_GATEWAY_URL:-}
      - TRUSTED_GATEWAYS_URLS=${TRUSTED_GATEWAYS_URLS:-}
      - TRUSTED_GATEWAYS_REQUEST_TIMEOUT_MS=${TRUSTED_GATEWAYS_REQUEST_TIMEOUT_MS:-}
      - START_HEIGHT=${START_HEIGHT:-}
      - STOP_HEIGHT=${STOP_HEIGHT:-}
      - SKIP_CACHE=${SKIP_CACHE:-}
      - SIMULATED_REQUEST_FAILURE_RATE=${SIMULATED_REQUEST_FAILURE_RATE:-}
      - INSTANCE_ID=${INSTANCE_ID:-}
      - AR_IO_WALLET=${AR_IO_WALLET:-}
      - ADMIN_API_KEY=${ADMIN_API_KEY:-}
      - BACKFILL_BUNDLE_RECORDS=${BACKFILL_BUNDLE_RECORDS:-}
      - FILTER_CHANGE_REPROCESS=${FILTER_CHANGE_REPROCESS:-}
      - ANS104_UNBUNDLE_WORKERS=${ANS104_UNBUNDLE_WORKERS:-}
      - ANS104_DOWNLOAD_WORKERS=${ANS104_DOWNLOAD_WORKERS:-}
      - ANS104_UNBUNDLE_FILTER=${ANS104_UNBUNDLE_FILTER:-}
      - ANS104_INDEX_FILTER=${ANS104_INDEX_FILTER:-}
      - DATA_ITEM_FLUSH_COUNT_THRESHOLD=${DATA_ITEM_FLUSH_COUNT_THRESHOLD:-}
      - MAX_FLUSH_INTERVAL_SECONDS=${MAX_FLUSH_INTERVAL_SECONDS:-}
      - ARNS_ROOT_HOST=${ARNS_ROOT_HOST:-}
      - SANDBOX_PROTOCOL=${SANDBOX_PROTOCOL:-}
      - START_WRITERS=${START_WRITERS:-}
      - IO_PROCESS_ID=${IO_PROCESS_ID:-}
      - CHAIN_CACHE_TYPE=${CHAIN_CACHE_TYPE:-redis}
      - REDIS_CACHE_URL=${REDIS_CACHE_URL:-redis://redis:6379}
      - REDIS_USE_TLS=${REDIS_USE_TLS:-false}
      - REDIS_CACHE_TTL_SECONDS=${REDIS_CACHE_TTL_SECONDS:-}
      - NODE_MAX_OLD_SPACE_SIZE=${NODE_MAX_OLD_SPACE_SIZE:-}
      - ENABLE_FS_HEADER_CACHE_CLEANUP=${ENABLE_FS_HEADER_CACHE_CLEANUP:-}
      - ON_DEMAND_RETRIEVAL_ORDER=${ON_DEMAND_RETRIEVAL_ORDER:-}
      - BACKGROUND_RETRIEVAL_ORDER=${BACKGROUND_RETRIEVAL_ORDER:-}
      - CHUNK_METADATA_CACHE_TYPE=${CHUNK_METADATA_CACHE_TYPE:-redis}
      - WEBHOOK_TARGET_SERVERS=${WEBHOOK_TARGET_SERVERS:-}
      - WEBHOOK_INDEX_FILTER=${WEBHOOK_INDEX_FILTER:-}
      - WEBHOOK_BLOCK_FILTER=${WEBHOOK_BLOCK_FILTER:-}
      - CONTIGUOUS_DATA_CACHE_CLEANUP_THRESHOLD=${CONTIGUOUS_DATA_CACHE_CLEANUP_THRESHOLD:-}
      - TRUSTED_ARNS_GATEWAY_URL=${TRUSTED_ARNS_GATEWAY_URL:-}
      - AR_IO_SDK_LOG_LEVEL=${AR_IO_SDK_LOG_LEVEL:-none}
      - ARNS_RESOLVER_PRIORITY_ORDER=${ARNS_RESOLVER_PRIORITY_ORDER:-}
      - ARNS_COMPOSITE_RESOLVER_TIMEOUT_MS=${ARNS_COMPOSITE_RESOLVER_TIMEOUT_MS:-}
      - ARNS_RESOLVER_ENFORCE_UNDERNAME_LIMIT=${ARNS_RESOLVER_ENFORCE_UNDERNAME_LIMIT:-}
      - ARNS_RESOLVER_OVERRIDE_TTL_SECONDS=${ARNS_RESOLVER_OVERRIDE_TTL_SECONDS:-}
      - ARWEAVE_NODE_IGNORE_URLS=${ARWEAVE_NODE_IGNORE_URLS:-}
      - ARNS_CACHE_TTL_SECONDS=${ARNS_CACHE_TTL_SECONDS:-}
      - ARNS_CACHE_MAX_KEYS=${ARNS_CACHE_MAX_KEYS:-10000}
      - ARNS_CACHE_TYPE=${ARNS_CACHE_TYPE:-redis}
      - ARNS_NAMES_CACHE_TTL_SECONDS=${ARNS_NAMES_CACHE_TTL_SECONDS:-}
      - ARNS_MAX_CONCURRENT_RESOLUTIONS=${ARNS_MAX_CONCURRENT_RESOLUTIONS:-}
      - ARIO_PROCESS_DEFAULT_CIRCUIT_BREAKER_TIMEOUT_MS=${ARIO_PROCESS_DEFAULT_CIRCUIT_BREAKER_TIMEOUT_MS:-}
      - ARIO_PROCESS_DEFAULT_CIRCUIT_BREAKER_ERROR_THRESHOLD_PERCENTAGE=${ARIO_PROCESS_DEFAULT_CIRCUIT_BREAKER_ERROR_THRESHOLD_PERCENTAGE:-}
      - ARIO_PROCESS_DEFAULT_CIRCUIT_BREAKER_ROLLING_COUNT_TIMEOUT_MS=${ARIO_PROCESS_DEFAULT_CIRCUIT_BREAKER_ROLLING_COUNT_TIMEOUT_MS:-}
      - ARIO_PROCESS_DEFAULT_CIRCUIT_BREAKER_RESET_TIMEOUT_MS=${ARIO_PROCESS_DEFAULT_CIRCUIT_BREAKER_RESET_TIMEOUT_MS:-}
      - ENABLE_MEMPOOL_WATCHER=${ENABLE_MEMPOOL_WATCHER:-}
      - MEMPOOL_POOLING_INTERVAL_MS=${MEMPOOL_POOLING_INTERVAL_MS:-}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-}
      - AWS_REGION=${AWS_REGION:-}
      - AWS_ENDPOINT=${AWS_ENDPOINT:-}
      - AWS_S3_CONTIGUOUS_DATA_BUCKET=${AWS_S3_CONTIGUOUS_DATA_BUCKET:-}
      - AWS_S3_CONTIGUOUS_DATA_PREFIX=${AWS_S3_CONTIGUOUS_DATA_PREFIX:-}
      - AWS_DYNAMODB_TURBO_REGION=${AWS_DYNAMODB_TURBO_REGION:-}
      - AWS_DYNAMODB_TURBO_ENDPOINT=${AWS_DYNAMODB_TURBO_ENDPOINT:-}
      - AWS_DYNAMODB_TURBO_ASSUME_ROLE_ARN=${AWS_DYNAMODB_TURBO_ASSUME_ROLE_ARN:-}
      - AWS_DYNAMODB_TURBO_DATA_ITEM_TABLE=${AWS_DYNAMODB_TURBO_DATA_ITEM_TABLE:-}
      - AWS_DYNAMODB_TURBO_OFFSETS_TABLE=${AWS_DYNAMODB_TURBO_OFFSETS_TABLE:-}
      - AWS_ELASTICACHE_TURBO_HOST=${AWS_ELASTICACHE_TURBO_HOST:-}
      - AWS_ELASTICACHE_TURBO_USE_TLS=${AWS_ELASTICACHE_TURBO_USE_TLS:-}
      - AWS_ELASTICACHE_TURBO_PORT=${AWS_ELASTICACHE_TURBO_PORT:-}
      - AR_IO_NODE_RELEASE=${AR_IO_NODE_RELEASE:-45-pre}
      - CHUNK_POST_MIN_SUCCESS_COUNT=${CHUNK_POST_MIN_SUCCESS_COUNT:-}
      - CHUNK_POST_SORTED_PEERS_CACHE_DURATION_MS=${CHUNK_POST_SORTED_PEERS_CACHE_DURATION_MS:-}
      - CHUNK_POST_RESPONSE_TIMEOUT_MS=${CHUNK_POST_RESPONSE_TIMEOUT_MS:-}
      - CHUNK_POST_ABORT_TIMEOUT_MS=${CHUNK_POST_ABORT_TIMEOUT_MS:-}
      - AO_CU_URL=${AO_CU_URL:-}
      - NETWORK_AO_CU_URL=${NETWORK_AO_CU_URL:-}
      - ANT_AO_CU_URL=${ANT_AO_CU_URL:-}
      - AO_ANT_HYPERBEAM_URL=${AO_ANT_HYPERBEAM_URL:-}
      - AO_MU_URL=${AO_MU_URL:-}
      - AO_GATEWAY_URL=${AO_GATEWAY_URL:-}
      - AO_GRAPHQL_URL=${AO_GRAPHQL_URL:-}
      - WRITE_ANS104_DATA_ITEM_DB_SIGNATURES=${WRITE_ANS104_DATA_ITEM_DB_SIGNATURES:-}
      - WRITE_TRANSACTION_DB_SIGNATURES=${WRITE_TRANSACTION_DB_SIGNATURES:-}
      - ENABLE_DATA_DB_WAL_CLEANUP=${ENABLE_DATA_DB_WAL_CLEANUP:-}
      - MAX_DATA_ITEM_QUEUE_SIZE=${MAX_DATA_ITEM_QUEUE_SIZE:-}
      - TAG_SELECTIVITY=${TAG_SELECTIVITY:-}
      - MAX_EXPECTED_DATA_ITEM_INDEXING_INTERVAL_SECONDS=${MAX_EXPECTED_DATA_ITEM_INDEXING_INTERVAL_SECONDS:-}
      - ENABLE_BACKGROUND_DATA_VERIFICATION=${ENABLE_BACKGROUND_DATA_VERIFICATION:-}
      - MIN_DATA_VERIFICATION_PRIORITY=${MIN_DATA_VERIFICATION_PRIORITY:-}
      - BACKGROUND_DATA_VERIFICATION_INTERVAL_SECONDS=${BACKGROUND_DATA_VERIFICATION_INTERVAL_SECONDS:-}
      - CLICKHOUSE_URL=${CLICKHOUSE_URL:-}
      - CLICKHOUSE_USER=${CLICKHOUSE_USER:-}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD:-}
      - BUNDLE_DATA_IMPORTER_QUEUE_SIZE=${BUNDLE_DATA_IMPORTER_QUEUE_SIZE:-}
      - FS_CLEANUP_WORKER_BATCH_SIZE=${FS_CLEANUP_WORKER_BATCH_SIZE:-}
      - FS_CLEANUP_WORKER_BATCH_PAUSE_DURATION=${FS_CLEANUP_WORKER_BATCH_PAUSE_DURATION:-}
      - FS_CLEANUP_WORKER_RESTART_PAUSE_DURATION=${FS_CLEANUP_WORKER_RESTART_PAUSE_DURATION:-}
      - BUNDLE_REPAIR_RETRY_INTERVAL_SECONDS=${BUNDLE_REPAIR_RETRY_INTERVAL_SECONDS:-}
      - BUNDLE_REPAIR_RETRY_BATCH_SIZE=${BUNDLE_REPAIR_RETRY_BATCH_SIZE:-}
      - BUNDLE_REPAIR_UPDATE_TIMESTAMPS_INTERVAL_SECONDS=${BUNDLE_REPAIR_UPDATE_TIMESTAMPS_INTERVAL_SECONDS:-}
      - BUNDLE_REPAIR_BACKFILL_INTERVAL_SECONDS=${BUNDLE_REPAIR_BACKFILL_INTERVAL_SECONDS:-}
      - BUNDLE_REPAIR_FILTER_REPROCESS_INTERVAL_SECONDS=${BUNDLE_REPAIR_FILTER_REPROCESS_INTERVAL_SECONDS:-}
      - WEIGHTED_PEERS_TEMPERATURE_DELTA=${WEIGHTED_PEERS_TEMPERATURE_DELTA:-}
      - GATEWAY_PEERS_WEIGHTS_CACHE_DURATION_MS=${GATEWAY_PEERS_WEIGHTS_CACHE_DURATION_MS:-}
      - GATEWAY_PEERS_REQUEST_WINDOW_COUNT=${GATEWAY_PEERS_REQUEST_WINDOW_COUNT:-}
      - APEX_TX_ID=${APEX_TX_ID:-}
      - APEX_ARNS_NAME=${APEX_ARNS_NAME:-}
      - ARNS_NOT_FOUND_TX_ID=${ARNS_NOT_FOUND_TX_ID:-}
      - ARNS_NOT_FOUND_ARNS_NAME=${ARNS_NOT_FOUND_ARNS_NAME:-}
      - PREFERRED_ARNS_NAMES=${PREFERRED_ARNS_NAMES:-}
      - PREFERRED_ARNS_BASE_NAMES=${PREFERRED_ARNS_BASE_NAMES:-}
      - PREFERRED_ARNS_CONTIGUOUS_DATA_CACHE_CLEANUP_THRESHOLD=${PREFERRED_ARNS_CONTIGUOUS_DATA_CACHE_CLEANUP_THRESHOLD:-}
      - PREFERRED_CHUNK_GET_NODE_URLS=${PREFERRED_CHUNK_GET_NODE_URLS:-}
      - PREFERRED_CHUNK_POST_NODE_URLS=${PREFERRED_CHUNK_POST_NODE_URLS:-}
      - CHUNK_POST_QUEUE_DEPTH_THRESHOLD=${CHUNK_POST_QUEUE_DEPTH_THRESHOLD:-}
      - CHUNK_POST_PEER_CONCURRENCY=${CHUNK_POST_PEER_CONCURRENCY:-}
      - CHUNK_POST_PER_NODE_CONCURRENCY=${CHUNK_POST_PER_NODE_CONCURRENCY:-}
      - PEER_REFRESH_CONCURRENCY=${PEER_REFRESH_CONCURRENCY:-}
      - PREFERRED_CHUNK_POST_WEIGHT=${PREFERRED_CHUNK_POST_WEIGHT:-}
      - OTEL_BATCH_LOG_PROCESSOR_SCHEDULED_DELAY_MS=${OTEL_BATCH_LOG_PROCESSOR_SCHEDULED_DELAY_MS:-}
      - OTEL_BATCH_LOG_PROCESSOR_MAX_EXPORT_BATCH_SIZE=${OTEL_BATCH_LOG_PROCESSOR_MAX_EXPORT_BATCH_SIZE:-}
      - OTEL_SERVICE_NAME=${OTEL_SERVICE_NAME:-}
      - OTEL_TRACING_SAMPLING_RATE_DENOMINATOR=${OTEL_TRACING_SAMPLING_RATE_DENOMINATOR:-}
      - OTEL_EXPORTER_OTLP_HEADERS_FILE=${OTEL_EXPORTER_OTLP_HEADERS_FILE:-}
      - OTEL_EXPORTER_OTLP_HEADERS=${OTEL_EXPORTER_OTLP_HEADERS:-}
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT:-}
    networks:
      - ar-io-network
    depends_on:
      - redis
    labels:
      autoheal: ${RUN_AUTOHEAL:-false}

  redis:
    image: redis:${REDIS_IMAGE_TAG:-7}
    command: redis-server --maxmemory ${REDIS_MAX_MEMORY:-256mb} --maxmemory-policy allkeys-lru ${EXTRA_REDIS_FLAGS:---save "" --appendonly no}
    restart: unless-stopped
    ports:
      - '6379' # don't expose redis externally by default
    volumes:
      - ${REDIS_DATA_PATH:-./data/redis}:/data
    networks:
      - ar-io-network

  clickhouse:
    image: clickhouse/clickhouse-server:${CLICKHOUSE_IMAGE_TAG:-25.4}
    profiles:
      - clickhouse
    ports:
      - ${CLICKHOUSE_PORT_2:-8123}:8123
      - ${CLICKHOUSE_PORT_3:-8443}:8443
      - ${CLICKHOUSE_PORT:-9000}:9000
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - ${CLICKHOUSE_DATA_PATH:-./data/clickhouse}:/var/lib/clickhouse
      - ${CLICKHOUSE_LOGS_PATH:-./logs/clickhouse}:/var/log/clickhouse-server
    environment:
      - CLICKHOUSE_USER=${CLICKHOUSE_USER:-}
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD:-}
    networks:
      - ar-io-network

  clickhouse-auto-import:
    image: ghcr.io/ar-io/ar-io-clickhouse-auto-import:${CLICKHOUSE_AUTO_IMPORT_IMAGE_TAG:-latest}
    profiles:
      - clickhouse
    build:
      context: .
      dockerfile: Dockerfile.clickhouse-auto-import
    restart: unless-stopped
    volumes:
      - ${PARQUET_DATA_PATH:-./data/parquet}:/app/data/parquet
    environment:
      - DEBUG=${CLICKHOUSE_DEBUG:-}
      - AR_IO_HOST=core
      - AR_IO_PORT=${CORE_PORT:-4000}
      - ADMIN_API_KEY=${ADMIN_API_KEY:-}
      - CLICKHOUSE_HOST=${CLICKHOUSE_HOST:-clickhouse} # defaults to localhost in scripts
      - CLICKHOUSE_PORT=${CLICKHOUSE_PORT:-} # defaults to 9000 in scripts
      - CLICKHOUSE_USER=${CLICKHOUSE_USER:-} # defaults to 'default' in scripts
      - CLICKHOUSE_PASSWORD=${CLICKHOUSE_PASSWORD:-} # must be set, no default
      - CLICKHOUSE_AUTO_IMPORT_SLEEP_INTERVAL=${CLICKHOUSE_AUTO_IMPORT_SLEEP_INTERVAL:-}
      - CLICKHOUSE_AUTO_IMPORT_HEIGHT_INTERVAL=${CLICKHOUSE_AUTO_IMPORT_HEIGHT_INTERVAL:-}
      - CLICKHOUSE_AUTO_IMPORT_MAX_ROWS_PER_FILE=${CLICKHOUSE_AUTO_IMPORT_MAX_ROWS_PER_FILE:-}
    networks:
      - ar-io-network
    depends_on:
      - core
      - clickhouse

  observer:
    image: ghcr.io/ar-io/ar-io-observer:${OBSERVER_IMAGE_TAG:-6cb911e4ac9fd04a1795144f86b77ad0174ee6d9}
    restart: unless-stopped
    ports:
      - ${OBSERVER_PORT:-5050}:5050
    volumes:
      - ${TEMP_DATA_PATH:-./data/tmp}:/app/data/tmp
      - ${REPORTS_DATA_PATH:-./data/reports}:/app/data/reports
      - ${WALLETS_PATH:-./wallets}:/app/wallets
    environment:
      - LOG_LEVEL=${OBSERVER_LOG_LEVEL:-}
      - OBSERVER_WALLET=${OBSERVER_WALLET:-}
      - IO_PROCESS_ID=${IO_PROCESS_ID:-}
      - SUBMIT_CONTRACT_INTERACTIONS=${SUBMIT_CONTRACT_INTERACTIONS:-true}
      - NUM_ARNS_NAMES_TO_OBSERVE_PER_GROUP=${NUM_ARNS_NAMES_TO_OBSERVE_PER_GROUP:-8}
      - REPORT_GENERATION_INTERVAL_MS=${REPORT_GENERATION_INTERVAL_MS:-}
      - REPORT_DATA_SINK=${REPORT_DATA_SINK:-}
      - TURBO_UPLOAD_SERVICE_URL=${TURBO_UPLOAD_SERVICE_URL:-}
      - RUN_OBSERVER=${RUN_OBSERVER:-true}
      - MIN_RELEASE_NUMBER=${MIN_RELEASE_NUMBER:-0}
      - AR_IO_NODE_RELEASE=${AR_IO_NODE_RELEASE:-45-pre}
      - AR_IO_SDK_LOG_LEVEL=${AR_IO_SDK_LOG_LEVEL:-none}
      - AO_CU_URL=${AO_CU_URL:-}
      - NETWORK_AO_CU_URL=${NETWORK_AO_CU_URL:-}
      - AO_MU_URL=${AO_MU_URL:-}
      - AO_GATEWAY_URL=${AO_GATEWAY_URL:-}
      - AO_GRAPHQL_URL=${AO_GRAPHQL_URL:-}
    networks:
      - ar-io-network

  litestream:
    image: ghcr.io/ar-io/ar-io-litestream:${LITESTREAM_IMAGE_TAG:-latest}
    build:
      context: litestream/
      dockerfile: Dockerfile
    profiles:
      - litestream
    volumes:
      - ${SQLITE_DATA_PATH:-./data/sqlite}:/app/data/sqlite
    environment:
      - TVAL_AR_IO_SQLITE_BACKUP_S3_BUCKET_NAME=${AR_IO_SQLITE_BACKUP_S3_BUCKET_NAME:-}
      - TVAL_AR_IO_SQLITE_BACKUP_S3_BUCKET_REGION=${AR_IO_SQLITE_BACKUP_S3_BUCKET_REGION:-}
      - TVAL_AR_IO_SQLITE_BACKUP_S3_BUCKET_ACCESS_KEY=${AR_IO_SQLITE_BACKUP_S3_BUCKET_ACCESS_KEY:-}
      - TVAL_AR_IO_SQLITE_BACKUP_S3_BUCKET_SECRET_KEY=${AR_IO_SQLITE_BACKUP_S3_BUCKET_SECRET_KEY:-}
      - TVAL_AR_IO_SQLITE_BACKUP_S3_BUCKET_PREFIX=${AR_IO_SQLITE_BACKUP_S3_BUCKET_PREFIX:-}
    networks:
      - ar-io-network

  autoheal:
    image: willfarrell/autoheal@sha256:fd2c5500ab9210be9fa0d365162301eb0d16923f1d9a36de887f5d1751c6eb8c
    network_mode: none
    restart: always
    environment:
      - AUTOHEAL_CONTAINER_LABEL=autoheal
      - AUTOHEAL_ONLY_MONITOR_RUNNING=false
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  ar-io-network:
    name: ${DOCKER_NETWORK_NAME:-ar-io-network}
