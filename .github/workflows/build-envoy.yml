name: build-envoy

on:
  workflow_dispatch:
  push:
    branches:
      - develop
    paths:
      - 'envoy/**'

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      actions: write
      id-token: write
      contents: read
      packages: write

    steps:
      # Setup
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # Build and push container image
      - name: Log in to the GitHub Container Registry
        if: ${{ github.ref == 'refs/heads/develop' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push container image
        if: ${{ github.ref == 'refs/heads/develop' }}
        uses: docker/build-push-action@v5
        with:
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
          context: envoy/
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/ar-io/ar-io-envoy:latest
            ghcr.io/ar-io/ar-io-envoy:${{ github.sha }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_BUILD_INVOCATION_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Trigger Deployment
        run: |
          aws lambda invoke \
            --function-name ario-dev-deployment-trigger \
            --region ${{ secrets.AWS_REGION }} \
            --cli-binary-format raw-in-base64-out \
            --payload '{"image_sha": "${{ github.sha }}", "event_type": "deploy-ar-io-envoy"}' \
            /dev/null

      # Success notification
      - name: Send Slack success notification
        if: success()
        env:
          SLACK_TITLE: Build succeeded!
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        uses: rtCamp/action-slack-notify@v2

      # Failure notification
      - name: Send Slack failure notification
        if: failure()
        env:
          SLACK_TITLE: Build failed!
          SLACK_COLOR: danger
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        uses: rtCamp/action-slack-notify@v2
